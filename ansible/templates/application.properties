incident.application.name={{ incidents_app_name }}
spring.application.name={{ incidents_app_name }}
server.servlet.context-path={{ incidents_base_uri }}
app.server.url=https://{{ ansible_host }}
address.required.message=address is required
spring.cache.type=NONE
spring.thymeleaf.cache=false

;;
;; the following zipcodes, defaultCity and defualState
;; are required, if multiple cities, put comma in between
;;
incident.zipcodes={{ incidents_locale.zip }}
incident.defaultcity={{ incidents_locale.city }}
incident.defaultjurisdiction={{ incidents_locale.city }}
incident.defaultstate={{ incidents_locale.state }}
;;
;; maximum of total value of all properties damage allowed in dollars
;; 0 means no limit
incident.property.maxtotalvalue=0
incident.address.geoUrl={{ incidents_geoserver }}
;;
;; File upload settings
;;
incident.upload.storage={{ incidents_site_home }}/files
incident.media.max_count=3
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=10MB
;; this need to be specified
;; tomcat9 can not write to temp dir
spring.servlet.multipart.location=${java.io.tmpdir}
;;
;; dbDatasouce is a bean name used in configuration
incident.dbdatasource.driverClassName = com.mysql.cj.jdbc.Driver
incident.dbdatasource.jdbc-url= jdbc:mysql://{{ incidents_db.host }}/{{ incidents_db.name }}?autoreconnect=true&serverTimezone=GMT-5
incident.dbdatasource.serverTimezone = GMT-5
incident.dbdatasource.username = {{ incidents_db.user }}
incident.dbdatasource.password = {{ incidents_db.pass }}
incident.dbdatasource.testOnBorrow = true
incident.dbdatasource.testWhileIdle = true
incident.dbdatasource.timeBetweenEvictionRunsMillis = 60000
incident.dbdatasource.minEvictableIdleTimeMillis = 30000
incident.dbdatasource.validationQuery = SELECT 1
incident.dbdatasource.max-active = 15
incident.dbdatasource.max-idle = 10
incident.dbdatasource.max-wait = 8000

;;
;; LDAP Authentication
incident.ldap.host={{ incidents_ldap.server }}/{{ incidents_ldap.base_dn }}
;; address check url to verify address is valid
incident.master.addressService={{ incidents_address_service }}/locations

;;
;; Session configuration
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=never
spring.session.timeout.seconds=60m

;;
;; quartz related setting
spring.quartz.job-store-type = jdbc
spring.quartz.jdbc.initialize-schema=never
spring.quartz.properties.org.quartz.scheduler.instanceName=qrtz-incidents
spring.quartz.properties.org.quartz.threadPool.threadCount = 2
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.dataSource=quartzDataSource
spring.quartz.properties.org.quartz.jobStore.useProperties=true
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.dataSource = myDS
spring.quartz.properties.org.quartz.dataSource.myDS.driver= com.mysql.cj.jdbc.Driver
spring.quartz.properties.org.quartz.dataSource.myDS.URL=jdbc:mysql://{{ incidents_db.host }}/{{ incidents_db.name }}?autoreconnect=true&serverTimezone=GMT-5
spring.quartz.properties.org.quartz.dataSource.myDS.user = {{ incidents_db.user }}
spring.quartz.properties.org.quartz.dataSource.myDS.password = {{ incidents_db.pass }}
spring.quartz.properties.org.quartz.dataSource.myDS.maxConnections = 2
;;
;; Email configuration
incident.email.host={{ incidents_smtp.host }}
incident.email.sender={{ incidents_smtp.from }}
spring.mail.host={{ incidents_smtp.host }}
spring.mail.port=25
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false
;;
;; tell hibernate to use physical table name
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
